<?php
/**
 * @author Robert Sass <rs@brainedia.de>
 * @copyright 2014-2015 Robert Sass
 * @link http://www.brainedia.com
 * @link http://robertsass.me
 */

namespace Templates;


/**
 * @author Robert Sass <rs@brainedia.de>
 * @copyright 2014-2015 Robert Sass
 * @internal
 */
interface WebmasterSignupInterface {

	function extendHead( \rsCore\ProtectivePageHeadInterface $Head );

}


/**
 * @author Robert Sass <rs@brainedia.de>
 * @copyright 2014-2015 Robert Sass
 *
 * @extends Base
 */
class WebmasterSignup extends SiteBase implements WebmasterSignupInterface {


	/** Dient als Konstruktor
	 *
	 * @access public
	 * @return void
	 */
	public function init() {
		parent::init();

		$this->hook( 'extendHead' );
		$this->hook( 'extendTop', 'buildTopBanner' );
		$this->hook( 'extendMenu', 'buildCityMenu' );
		$this->hook( 'extendContent' );
	}


	/** Hook zum Manipulieren des HTML-Headers
	 *
	 * @access public
	 * @param \rsCore\PageHead $Head
	 * @return void
	 */
	public function extendHead( \rsCore\ProtectivePageHeadInterface $Head ) {
		parent::extendHead( $Head );
		$Head->linkStylesheet( '/static/css/webmaster-signup.css' );
		$Head->linkScript( '/static/js/webmaster-signup.js' );
	}


	/** Hook zum Manipulieren des Contents
	 *
	 * @access public
	 * @param \rsCore\Container $Container
	 * @return void
	 */
	public function extendContent( \rsCore\Container $Container ) {
		$Container = $Container->subordinate( 'div.row' );
		$Content = $Container->subordinate( 'div.col-md-8' );
		$Sidebar = $Container->subordinate( 'div.col-md-4' );

	#	$Content->subordinate( 'h1', $this->getDocument()->getName() );
		$Content->swallow( $this->getDocument()->getContent() );

		if( !$this->handleSignup( $Content ) )
			$this->buildSignupForm( $Content );
	}


	/** Baut das Registrationsformular
	 *
	 * @access public
	 * @param \rsCore\Container $Container
	 * @return void
	 */
	public function buildSignupForm( \rsCore\Container $Container ) {
		$Container->subordinate( 'h2', t("Create account") );
		$Form = $Container->subordinate( 'form#webmaster-signup', array('method' => 'post') );

		$FormGroup = $Form->subordinate( 'div' );
		$FormGroup->subordinate( 'h3', t("City") );
		$Row = $FormGroup->subordinate( 'div.row' );
		$Row->subordinate( 'div.col-md-6', \Nightfever\NightfeverFrontend::buildCitySelector() );
		$Row->subordinate( 'div.col-md-6 > input(text).form-control:cityName', array('placeholder' => t("Other")) );

		$FormGroup = $Form->subordinate( 'div' );
		$FormGroup->subordinate( 'h3', t("Personal data") );
		$Row = $FormGroup->subordinate( 'div.row' );
		$Row->subordinate( 'p.col-md-6 > input(text).form-control:firstName', array('placeholder' => t("First name")) );
		$Row->subordinate( 'p.col-md-6 > input(text).form-control:lastName', array('placeholder' => t("Last name")) );
		$FormGroup->subordinate( 'p > input(text).form-control:email', array('placeholder' => t("E-Mail")) );
		$Row = $FormGroup->subordinate( 'div' );
		$Row->subordinate( 'p > label > input(radio):gender=w' )
			->parentSubordinate( 'span' )
			->append( t("female") );
		$Row->subordinate( 'p > label > input(radio):gender=m' )
			->parentSubordinate( 'span' )
			->append( t("male") );
		$FormGroup->subordinate( 'p > input(text).form-control:birthday', array('placeholder' => t("Birthday") .' (dd.mm.yyyy)') );

		$FormGroup = $Form->subordinate( 'div' );
		$FormGroup->subordinate( 'h3', t("Password") );
		$FormGroup->subordinate( 'p', t(\Brainstage\Plugins\Users::PASSWORD_POLICY_DESCRIPTION) );
		$Row = $FormGroup->subordinate( 'div.row' );
		$Row->subordinate( 'p.col-md-6 > input(password).form-control:pw', array('placeholder' => t("Password")) );
		$Row->subordinate( 'p.col-md-6 > input(password).form-control:pw2', array('placeholder' => t("Password")) );
		$FormGroup->subordinate( 'p > input(submit).btn.btn-primary', array('value' => t("Continue")) );
	}


	public function buildSiteSelector( \rsCore\Container $Container ) {}


	public function handleSignup( \rsCore\Container $Container ) {
		if( !empty( $_POST ) ) {
			try {
				$email = postVar('email');

				if( postVar('pw', false) !== postVar('pw2', true) )
					throw new \Exception( "Passwords do not match." );
				if( !preg_match( '/'. \Brainstage\Plugins\Users::PASSWORD_POLICY_REGEX .'/', postVar('pw') ) )
					throw new \Exception( "Your password does not comply with the password policy." );

				$User = \Nightfever\User::addUser( $email );
				if( !$User )
					throw new \Exception( "Could not create user." );

				$BrainstageUser = $User->getBrainstageUser();
				if( $BrainstageUser ) {
					$BrainstageUser->password = postVar('pw');
					$BrainstageUser->name = postVar('firstName') .' '. postVar('lastName');
					$BrainstageUser->adopt();
				}

				$User->firstName = postVar('firstName');
				$User->lastName = postVar('lastName');
				$User->gender = postVar('gender');
				$Birhtday = \DateTime::createFromFormat( 'd.m.Y', postVar('birthday') );
				if( is_object( $Birhtday ) )
					$User->birthday = $Birhtday->format( 'Y-m-d' );
				$City = \Nightfever\City::getCityById( intval( postVar('city') ) );
				$User->city = postVar('cityName') ? postVar('cityName') : ($City ? $City->name : postVar('cityName'));
				$User->adopt();
			} catch( \Exception $Exception ) {
				$Container->subordinate( 'h2', t("Error.") );
				$Container->subordinate( 'p', $Exception->getMessage() );
				$Container->subordinate( 'p > a', array('href' => './?d='. $this->getDocument()->getPrimaryKeyValue()), t("Please go back and correct your input!") );
				return true;
			}
			$Container->subordinate( 'h2', t("Thank you!") );
			$Container->subordinate( 'p', t("We will set up your account and contact you as soon as you can log in.") );
			return true;
		}
		return false;
	}


}
